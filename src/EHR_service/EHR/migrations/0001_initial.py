# Generated by Django 5.0.2 on 2025-05-21 16:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(help_text='ID from User Service', verbose_name='Patient ID')),
                ('patient_name', models.CharField(help_text='Denormalized for convenience', max_length=255, verbose_name='Patient Name')),
                ('blood_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='Blood Type')),
                ('allergies', models.JSONField(default=list, help_text='List of allergies', verbose_name='Allergies')),
                ('chronic_conditions', models.JSONField(default=list, help_text='List of chronic conditions', verbose_name='Chronic Conditions')),
                ('medical_history_summary', models.TextField(blank=True, verbose_name='Medical History Summary')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
                'indexes': [models.Index(fields=['patient_id'], name='EHR_medical_patient_099af4_idx'), models.Index(fields=['created_at'], name='EHR_medical_created_d814b7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_id', models.UUIDField(help_text='Unique ID for encounter', unique=True, verbose_name='Encounter ID')),
                ('doctor_id', models.IntegerField(help_text='ID from User Service', verbose_name='Doctor ID')),
                ('doctor_name', models.CharField(help_text='Denormalized for convenience', max_length=255, verbose_name='Doctor Name')),
                ('appointment_id', models.CharField(blank=True, help_text='ID from Appointment Service', max_length=100, null=True, verbose_name='Appointment ID')),
                ('encounter_date', models.DateTimeField(verbose_name='Encounter Date')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('history_of_present_illness', models.TextField(blank=True, verbose_name='History of Present Illness')),
                ('physical_examination_findings', models.TextField(blank=True, verbose_name='Physical Examination Findings')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encounters', to='EHR.medicalrecord', verbose_name='Medical Record')),
            ],
            options={
                'verbose_name': 'Encounter',
                'verbose_name_plural': 'Encounters',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescription_id', models.CharField(help_text='ID from Prescription Service', max_length=100, verbose_name='Prescription ID')),
                ('issue_date', models.DateTimeField(verbose_name='Issue Date')),
                ('prescription_details_url', models.URLField(max_length=500, verbose_name='Prescription Details URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescription_references', to='EHR.encounter', verbose_name='Encounter')),
            ],
            options={
                'verbose_name': 'Prescription Reference',
                'verbose_name_plural': 'Prescription References',
            },
        ),
        migrations.CreateModel(
            name='TreatmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_plan_id', models.UUIDField(unique=True, verbose_name='Treatment Plan ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('follow_up_instructions', models.TextField(blank=True, verbose_name='Follow-up Instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_plans', to='EHR.encounter', verbose_name='Encounter')),
            ],
            options={
                'verbose_name': 'Treatment Plan',
                'verbose_name_plural': 'Treatment Plans',
            },
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vital_id', models.UUIDField(unique=True, verbose_name='Vital ID')),
                ('nurse_id', models.IntegerField(help_text='ID from User Service', verbose_name='Nurse ID')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('heart_rate', models.IntegerField(blank=True, null=True, verbose_name='Heart Rate')),
                ('blood_pressure', models.CharField(blank=True, max_length=20, null=True, verbose_name='Blood Pressure')),
                ('temperature_celsius', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Temperature (Celsius)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='EHR.encounter', verbose_name='Encounter')),
            ],
            options={
                'verbose_name': 'Vital Sign',
                'verbose_name_plural': 'Vital Signs',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_id', models.UUIDField(unique=True, verbose_name='Diagnosis ID')),
                ('icd_code', models.CharField(max_length=20, verbose_name='ICD Code')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is Primary')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='EHR.encounter', verbose_name='Encounter')),
            ],
            options={
                'verbose_name': 'Diagnosis',
                'verbose_name_plural': 'Diagnoses',
                'indexes': [models.Index(fields=['encounter'], name='EHR_diagnos_encount_e4c6ed_idx'), models.Index(fields=['icd_code'], name='EHR_diagnos_icd_cod_898f0a_idx')],
            },
        ),
        migrations.CreateModel(
            name='LabResultReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_order_item_id', models.CharField(help_text='ID from Laboratory Service', max_length=100, verbose_name='Lab Order Item ID')),
                ('test_name', models.CharField(max_length=255, verbose_name='Test Name')),
                ('result_summary_url', models.URLField(max_length=500, verbose_name='Result Summary URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('encounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_result_references', to='EHR.encounter', verbose_name='Encounter')),
            ],
            options={
                'verbose_name': 'Lab Result Reference',
                'verbose_name_plural': 'Lab Result References',
                'indexes': [models.Index(fields=['encounter'], name='EHR_labresu_encount_2c233a_idx'), models.Index(fields=['lab_order_item_id'], name='EHR_labresu_lab_ord_631627_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['medical_record'], name='EHR_encount_medical_176d0a_idx'),
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['doctor_id'], name='EHR_encount_doctor__99037e_idx'),
        ),
        migrations.AddIndex(
            model_name='encounter',
            index=models.Index(fields=['encounter_date'], name='EHR_encount_encount_5d6adb_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionreference',
            index=models.Index(fields=['encounter'], name='EHR_prescri_encount_e363e3_idx'),
        ),
        migrations.AddIndex(
            model_name='prescriptionreference',
            index=models.Index(fields=['prescription_id'], name='EHR_prescri_prescri_f3543d_idx'),
        ),
        migrations.AddIndex(
            model_name='treatmentplan',
            index=models.Index(fields=['encounter'], name='EHR_treatme_encount_3c3da5_idx'),
        ),
        migrations.AddIndex(
            model_name='vitalsign',
            index=models.Index(fields=['encounter'], name='EHR_vitalsi_encount_9749f0_idx'),
        ),
        migrations.AddIndex(
            model_name='vitalsign',
            index=models.Index(fields=['timestamp'], name='EHR_vitalsi_timesta_ee2a01_idx'),
        ),
    ]
